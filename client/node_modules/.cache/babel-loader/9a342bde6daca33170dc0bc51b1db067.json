{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rupam/Documents/Development/react-ecommerce-app/src/pages/shop/shop.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport CollectionsOverview from '../../components/collectionsOverview/collectionsOverview.component';\nimport { Route } from 'react-router-dom';\nimport CategoryPage from '../category/categoryPage.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../fireBase/firebase.utils';\nimport { fetchCollectionStart } from '../../redux/shop/shop.actions';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { WithSpinner } from '../../components/with-spinner/with-spinner.component';\nimport { SelectIsCollectionFetching, SelectIsCollectionLoaded } from '../../redux/shop/shop.selector';\nimport CollectionsOverviewContainer from '../../components/collectionsOverview/collectionOverview.container';\nimport CategoryPageContainer from '../../pages/category/categoryPage.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionOverviewWithSpinner;\nconst CategoryPageWithSpinner = WithSpinner(CategoryPage);\n_c2 = CategoryPageWithSpinner;\n\nconst Shop = ({\n  fetchCollectionStart,\n  isCollectionFetching,\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchCollectionStart();\n  }, [fetchCollectionStart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverviewWithSpinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/:categoryId`,\n      component: CategoryPageWithSpinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Shop, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = Shop;\nconst mapStateTorProps = createStructuredSelector({\n  isCollectionFetching: SelectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionStart: () => dispatch(fetchCollectionStart())\n});\n\nexport default connect(mapStateTorProps, mapDispatchToProps)(Shop);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CategoryPageWithSpinner\");\n$RefreshReg$(_c3, \"Shop\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/react-ecommerce-app/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","CollectionsOverview","Route","CategoryPage","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","createStructuredSelector","connect","WithSpinner","SelectIsCollectionFetching","SelectIsCollectionLoaded","CollectionsOverviewContainer","CategoryPageContainer","CollectionOverviewWithSpinner","CategoryPageWithSpinner","Shop","isCollectionFetching","match","path","mapStateTorProps","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,oBAAR,QAAmC,+BAAnC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,sDAA1B;AACA,SAAQC,0BAAR,EAAmCC,wBAAnC,QAAkE,gCAAlE;AACA,OAAOC,4BAAP,MAAyC,mEAAzC;AACA,OAAOC,qBAAP,MAAkC,6CAAlC;AACA,MAAMC,6BAA6B,GAACL,WAAW,CAACR,mBAAD,CAA/C;KAAMa,6B;AACN,MAAMC,uBAAuB,GAACN,WAAW,CAACN,YAAD,CAAzC;MAAMY,uB;;AAEN,MAAMC,IAAI,GAAE,CAAC;AAACV,EAAAA,oBAAD;AAAsBW,EAAAA,oBAAtB;AAA2CC,EAAAA;AAA3C,CAAD,KAAqD;AAAA;;AAE7DlB,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,oBAAoB;AACvB,GAFQ,EAEP,CAACA,oBAAD,CAFO,CAAT;AAMI,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACA,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEL;AAA/C;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,cAA3B;AAA0C,MAAA,SAAS,EAAEJ;AAArD;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAdL;;GAAMC,I;;MAAAA,I;AAiBN,MAAMI,gBAAgB,GAACb,wBAAwB,CAAC;AAC5CU,EAAAA,oBAAoB,EAAEP;AADsB,CAAD,CAA/C;;AAIA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpChB,EAAAA,oBAAoB,EAAC,MAAIgB,QAAQ,CAAChB,oBAAoB,EAArB;AADG,CAAL,CAAnC;;AAKA,eAAeE,OAAO,CAACY,gBAAD,EAAkBC,kBAAlB,CAAP,CAA6CL,IAA7C,CAAf","sourcesContent":["import React,{useEffect} from 'react'\nimport CollectionsOverview from '../../components/collectionsOverview/collectionsOverview.component'\nimport {Route} from 'react-router-dom'\nimport CategoryPage from '../category/categoryPage.component'\nimport {firestore, convertCollectionsSnapshotToMap} from '../../fireBase/firebase.utils'; \nimport {fetchCollectionStart} from '../../redux/shop/shop.actions'\nimport {createStructuredSelector} from 'reselect'\nimport {connect} from 'react-redux';\nimport {WithSpinner} from '../../components/with-spinner/with-spinner.component';\nimport {SelectIsCollectionFetching,SelectIsCollectionLoaded} from '../../redux/shop/shop.selector';\nimport CollectionsOverviewContainer from '../../components/collectionsOverview/collectionOverview.container';\nimport CategoryPageContainer from '../../pages/category/categoryPage.component'\nconst CollectionOverviewWithSpinner=WithSpinner(CollectionsOverview);\nconst CategoryPageWithSpinner=WithSpinner(CategoryPage);\n\nconst Shop =({fetchCollectionStart,isCollectionFetching,match})=>{\n    \n    useEffect(()=>{\n        fetchCollectionStart()\n    },[fetchCollectionStart])\n\n\n   \n        return(\n            <div className='shop-page'>   \n            <Route exact path={`${match.path}`} component={CollectionOverviewWithSpinner}/>\n            <Route path={`${match.path}/:categoryId`} component={CategoryPageWithSpinner}/>\n            </div>\n        );\n    }\n\n\nconst mapStateTorProps=createStructuredSelector({\n    isCollectionFetching: SelectIsCollectionFetching,\n    \n})\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionStart:()=>dispatch(fetchCollectionStart())\n  });\n\n\nexport default connect(mapStateTorProps,mapDispatchToProps)(Shop);"]},"metadata":{},"sourceType":"module"}