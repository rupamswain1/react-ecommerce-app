{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './root-reducer';\nimport createSagaMiddleWare from 'redux-saga';\nimport { fetchCollectionStart } from '../redux/shop/shop.sagas';\nimport rootSaga from '../redux/root-saga'; //import thunk from 'redux-thunk'\n\nconst sagaMiddleware = createSagaMiddleWare(); //when thunk is used\n//const middlewares=[thunk];\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/home/rupam/Documents/Development/react-ecommerce-app/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","rootReducer","createSagaMiddleWare","fetchCollectionStart","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,oBAAR,QAAmC,0BAAnC;AACA,OAAOC,QAAP,MAAqB,oBAArB,C,CACA;;AAEA,MAAMC,cAAc,GAACH,oBAAoB,EAAzC,C,CACA;AACA;;AACA,MAAMI,WAAW,GAAC,CAACD,cAAD,CAAlB;;AACA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,aAA1B,EAAwC;AACpCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBX,MAAjB;AACH;;AAED,OAAO,MAAMY,KAAK,GAACd,WAAW,CAACI,WAAD,EAAaH,eAAe,CAAC,GAAGQ,WAAJ,CAA5B,CAAvB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,OAAO,MAAMS,SAAS,GAACb,YAAY,CAACW,KAAD,CAA5B","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\n\nimport { persistStore } from 'redux-persist';\n\nimport rootReducer from './root-reducer';\nimport createSagaMiddleWare from 'redux-saga';\nimport {fetchCollectionStart} from '../redux/shop/shop.sagas';\nimport rootSaga from '../redux/root-saga'\n//import thunk from 'redux-thunk'\n\nconst sagaMiddleware=createSagaMiddleWare();\n//when thunk is used\n//const middlewares=[thunk];\nconst middlewares=[sagaMiddleware];\nif(process.env.NODE_ENV==='development'){\n    middlewares.push(logger);\n}\n\nexport const store=createStore(rootReducer,applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor=persistStore(store);\n\n"]},"metadata":{},"sourceType":"module"}