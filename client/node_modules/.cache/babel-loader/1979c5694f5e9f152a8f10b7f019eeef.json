{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rupam/Documents/Development/react-ecommerce-app/src/components/signIn/signIn.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux'; //import './signIn.style.scss';\n\nimport CustomButton from '../custom-button/custom-button-component';\nimport FormInput from '../form-input/form-input.component';\nimport { auth, signInWithGoogle } from '../../fireBase/firebase.utils';\nimport { SignInContainer, TitleContainer, ButtonContainer } from './signIn.style';\nimport { GoogleSignInStart, EmailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); //const {emailSignInStart}=this.props;\n    //const {email, password}=this.state;\n    // try{\n    //     auth.signInWithEmailAndPassword(email,password);\n    //     this.setState({'email': \"\", 'password':\"\"})\n    // }\n    // catch(error){\n    //     console.error(error);\n    // }\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" Already Have An Account!! Login Here: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"signInForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        className: \"email\",\n        type: \"email\",\n        name: \"email\",\n        label: \"email\",\n        value: email,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        className: \"password\",\n        type: \"password\",\n        name: \"password\",\n        label: \"password\",\n        value: password,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"/KzDV2a4VBIN9mBO66Hu8uUp+58=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(GoogleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(EmailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/react-ecommerce-app/src/components/signIn/signIn.component.jsx"],"names":["React","useState","connect","CustomButton","FormInput","auth","signInWithGoogle","SignInContainer","TitleContainer","ButtonContainer","GoogleSignInStart","EmailSignInStart","SignIn","emailSignInStart","googleSignInStart","userCredentials","setUserCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {connect} from 'react-redux'; \n//import './signIn.style.scss';\nimport CustomButton from '../custom-button/custom-button-component';\nimport FormInput from '../form-input/form-input.component';\nimport {auth, signInWithGoogle} from '../../fireBase/firebase.utils'\nimport {SignInContainer,\n    TitleContainer,\n    ButtonContainer\n} from './signIn.style'\nimport {GoogleSignInStart,EmailSignInStart} from '../../redux/user/user.actions'\n\n\nconst SignIn=({emailSignInStart,googleSignInStart})=>{\n    const [userCredentials,setUserCredentials]=useState({email:'',password:''})\n    \n    const {email,password}=userCredentials;\n    const handleSubmit= async event=>{\n        event.preventDefault();\n        //const {emailSignInStart}=this.props;\n        //const {email, password}=this.state;\n        // try{\n        //     auth.signInWithEmailAndPassword(email,password);\n        //     this.setState({'email': \"\", 'password':\"\"})\n        // }\n        // catch(error){\n        //     console.error(error);\n        // }\n        emailSignInStart(email,password);\n    }\n\n    const handleChange=event=>{\n        const {value, name}=event.target;\n        setUserCredentials({...userCredentials,[name]:value}); \n       \n    }\n    \n        return(\n            \n            <SignInContainer>\n                <TitleContainer>Sign In</TitleContainer>\n                <span> Already Have An Account!! Login Here: </span>\n                <form className='signInForm' onSubmit={handleSubmit}>\n                    <FormInput \n                        className='email' \n                        type='email'\n                        name='email'\n                        label='email'\n                        value={email}\n                        handleChange={handleChange}\n                        required\n                    />\n                    <FormInput \n                        className='password' \n                        type='password'\n                        name='password'\n                        label='password'\n                        value={password}\n                        handleChange={handleChange}\n                        required\n                    />\n                    <ButtonContainer>\n                        <CustomButton type='submit'>\n                            Sign In\n                        </CustomButton>\n                        <CustomButton type='button' type='button' onClick={googleSignInStart} isGoogleSignIn>\n                            Sign In With Google\n                        </CustomButton>\n                    </ButtonContainer>\n                </form>\n            </SignInContainer>\n        )\n    }\n\nconst mapDispatchToProps=dispatch=>({\n    googleSignInStart:()=>dispatch(GoogleSignInStart()),\n    emailSignInStart:(email,password)=>dispatch(EmailSignInStart({email,password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn); "]},"metadata":{},"sourceType":"module"}