{"ast":null,"code":"import ShopActionTypes from './shop.type';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../fireBase/firebase.utils';\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START\n});\nexport const fetchCollectionSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionFaliure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTION_FALIURE,\n  payload: errorMessage\n}); //complete this\n\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionsRef = firestore.collection('Collection');\n    dispatch(fetchCollectionStart());\n    collectionsRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionFaliure(error.errorMessage)));\n  };\n};\nexport const UpdateCollections = collections => {\n  //console.log(collections)\n  return {\n    type: ShopActionTypes.UPADTE_COLLECTIONS,\n    payload: collections\n  };\n};\n_c = UpdateCollections;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateCollections\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/react-ecommerce-app/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTION_START","fetchCollectionSuccess","collectionMap","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionFaliure","errorMessage","FETCH_COLLECTION_FALIURE","fetchCollectionStartAsync","dispatch","collectionsRef","collection","get","then","snapshot","catch","error","UpdateCollections","collections","UPADTE_COLLECTIONS"],"mappings":"AACA,OAAOA,eAAP,MAA4B,aAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,oBAAoB,GAAC,OAAK;AACnCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADa,CAAL,CAA3B;AAIP,OAAO,MAAMC,sBAAsB,GAACC,aAAa,KAChD;AACGH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,wBADzB;AAEGC,EAAAA,OAAO,EAACF;AAFX,CADgD,CAA1C;AAMP,OAAO,MAAMG,sBAAsB,GAACC,YAAY,KAAG;AAC/CP,EAAAA,IAAI,EAACJ,eAAe,CAACY,wBAD0B;AAE/CH,EAAAA,OAAO,EAACE;AAFuC,CAAH,CAAzC,C,CAKP;;AACA,OAAO,MAAME,yBAAyB,GAAC,MAAI;AACvC,SAAOC,QAAQ,IAAE;AACb,UAAMC,cAAc,GAACd,SAAS,CAACe,UAAV,CAAqB,YAArB,CAArB;AACAF,IAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR;AACAY,IAAAA,cAAc,CAACE,GAAf,GAAqBC,IAArB,CAA0BC,QAAQ,IAC/B;AAAE,YAAMZ,aAAa,GAACL,+BAA+B,CAACiB,QAAD,CAAnD;AACDL,MAAAA,QAAQ,CAACR,sBAAsB,CAACC,aAAD,CAAvB,CAAR;AACH,KAHD,EAGGa,KAHH,CAGSC,KAAK,IAAEP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACV,YAAP,CAAvB,CAHxB;AAIH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMW,iBAAiB,GAAEC,WAAD,IAAe;AAC1C;AACA,SAAO;AACPnB,IAAAA,IAAI,EAAEJ,eAAe,CAACwB,kBADf;AAEPf,IAAAA,OAAO,EAACc;AAFD,GAAP;AAGD,CALI;KAAMD,iB","sourcesContent":["\nimport ShopActionTypes from './shop.type'\nimport {firestore, convertCollectionsSnapshotToMap} from '../../fireBase/firebase.utils'; \n\nexport const fetchCollectionStart=()=>({\n    type: ShopActionTypes.FETCH_COLLECTION_START\n})\n\nexport const fetchCollectionSuccess=collectionMap=>\n({\n    type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n    payload:collectionMap,\n})\n\nexport const fetchCollectionFaliure=errorMessage=>({\n    type:ShopActionTypes.FETCH_COLLECTION_FALIURE,\n    payload:errorMessage,\n})\n\n//complete this\nexport const fetchCollectionStartAsync=()=>{\n    return dispatch=>{\n        const collectionsRef=firestore.collection('Collection');\n        dispatch(fetchCollectionStart());\n        collectionsRef.get().then(snapshot=>\n           { const collectionMap=convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionSuccess(collectionMap))\n        }).catch(error=>dispatch(fetchCollectionFaliure(error.errorMessage)))\n    };\n}\n\nexport const UpdateCollections=(collections)=>{\n    //console.log(collections)\n    return({\n    type: ShopActionTypes.UPADTE_COLLECTIONS,\n    payload:collections\n})}"]},"metadata":{},"sourceType":"module"}